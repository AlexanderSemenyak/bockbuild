From 5cfeb7edfff3a1c6e2e98a92f0786d5f4446b5ca Mon Sep 17 00:00:00 2001
From: Kristian Rietveld <kris@lanedo.com>
Date: Fri, 28 Sep 2012 08:24:05 +0200
Subject: [PATCH 13/22] Add hack to lock flow of scroll events to window where
 scroll started

A bit evil but there is probably no other way, because this is very
different from GDK's usual behavior.

There's one quirk left, if you start a scroll and move to another GTK+
window in the same process and click, the click won't be processed until
the folow of momentum events has ended.
---
 gdk/gdkwindow.c |   41 +++++++++++++++++++++++++++++++++++++++++
 1 files changed, 41 insertions(+), 0 deletions(-)

diff --git a/gdk/gdkwindow.c b/gdk/gdkwindow.c
index 6150472..fbc8e29 100644
--- a/gdk/gdkwindow.c
+++ b/gdk/gdkwindow.c
@@ -434,6 +434,10 @@ accumulate_get_window (GSignalInvocationHint *ihint,
 }
 
 static GQuark quark_pointer_window = 0;
+#ifdef GDK_WINDOWING_QUARTZ
+static GQuark quark_last_scroll_pointer_window = 0;
+static GQuark quark_last_scroll_event_window = 0;
+#endif /* GDK_WINDOWING_QUARTZ */
 
 static void
 gdk_window_class_init (GdkWindowObjectClass *klass)
@@ -478,6 +482,12 @@ gdk_window_class_init (GdkWindowObjectClass *klass)
   drawable_class->get_source_drawable = gdk_window_get_source_drawable;
 
   quark_pointer_window = g_quark_from_static_string ("gtk-pointer-window");
+#ifdef GDK_WINDOWING_QUARTZ
+  quark_last_scroll_pointer_window =
+      g_quark_from_static_string ("gtk-last-scroll-pointer-window");
+  quark_last_scroll_event_window =
+      g_quark_from_static_string ("gtk-last-scroll-event-window");
+#endif /* GDK_WINDOWING_QUARTZ */
 
 
   /* Properties */
@@ -10763,6 +10773,37 @@ proxy_button_event (GdkEvent *source_event,
 				type, state,
 				NULL, serial);
 
+#ifdef GDK_WINDOWING_QUARTZ
+  /* A Quartz-specific hack we cannot handle from within the backend
+   * unfortunately. For scroll events with precise deltas (i.e. these
+   * generated by the Mac touchpad or Magic Mouse, we want to lock the
+   * flow of events belonging to a single gesture to the window the
+   * gesture was started on. The default behavior of GDK, which insists
+   * to send events to the window under the pointer or discard the
+   * events when there's no GDK window under the pointer, makes it
+   * impossible to implement this differently.
+   */
+  if (type == GDK_SCROLL && source_event->scroll.has_deltas)
+    {
+      if (source_event->scroll.phase == GDK_EVENT_SCROLL_PHASE_START)
+        {
+          g_object_set_qdata (G_OBJECT (display),
+                              quark_last_scroll_pointer_window,
+                              pointer_window);
+          g_object_set_qdata (G_OBJECT (display),
+                              quark_last_scroll_event_window,
+                              event_win);
+        }
+      else
+        {
+          pointer_window = g_object_get_qdata (G_OBJECT (display),
+                                               quark_last_scroll_pointer_window);
+          event_win = g_object_get_qdata (G_OBJECT (display),
+                                          quark_last_scroll_event_window);
+        }
+    }
+#endif /* GDK_WINDOWING_QUARTZ */
+
   if (event_win == NULL || display->ignore_core_events)
     return TRUE;
 
-- 
1.7.5.4

