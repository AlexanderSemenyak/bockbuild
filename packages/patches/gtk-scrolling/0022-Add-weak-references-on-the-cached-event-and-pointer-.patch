From d992bec2709e1a9b2637461eeef982238f641f90 Mon Sep 17 00:00:00 2001
From: Kristian Rietveld <kris@lanedo.com>
Date: Mon, 8 Oct 2012 11:24:34 +0200
Subject: [PATCH 22/22] Add weak references on the cached event and pointer
 windosw

---
 gdk/gdkwindow.c |   59 +++++++++++++++++++++++++++++++++++++++++++++++++-----
 1 files changed, 53 insertions(+), 6 deletions(-)

diff --git a/gdk/gdkwindow.c b/gdk/gdkwindow.c
index fbc8e29..5d2d658 100644
--- a/gdk/gdkwindow.c
+++ b/gdk/gdkwindow.c
@@ -10706,6 +10706,58 @@ proxy_pointer_event (GdkDisplay                 *display,
 			     GDK_BUTTON4_MASK | \
 			     GDK_BUTTON5_MASK)
 
+#ifdef GDK_WINDOWING_QUARTZ
+static void
+last_scroll_event_weak_ref_notify (gpointer  data,
+                                   GObject  *where_the_object_was)
+{
+  /* If any of pointer_window or event_window is destroyed, we unset
+   * both values in the display's qdata.
+   */
+  GdkDisplay *display = data;
+
+  g_object_set_qdata (G_OBJECT (display), quark_last_scroll_pointer_window,
+                      NULL);
+  g_object_set_qdata (G_OBJECT (display), quark_last_scroll_event_window,
+                      NULL);
+}
+
+static void
+set_last_scroll_event_windows (GdkDisplay *display,
+                               GdkWindow  *pointer_window,
+                               GdkWindow  *event_window)
+{
+  GdkWindow *old_window;
+
+  /* Check whether the values are still set from a previous scroll,
+   * if so we need to release the weak references. (If they are no
+   * longer set, we assume the weak ref notify callback was called).
+   */
+  old_window = g_object_get_qdata (G_OBJECT (display),
+                                   quark_last_scroll_pointer_window);
+  if (old_window)
+    g_object_weak_unref (G_OBJECT (old_window),
+                         last_scroll_event_weak_ref_notify, display);
+
+  old_window = g_object_get_qdata (G_OBJECT (display),
+                                   quark_last_scroll_event_window);
+  if (old_window)
+    g_object_weak_unref (G_OBJECT (old_window),
+                         last_scroll_event_weak_ref_notify, display);
+
+  /* Set new values and setup weak references */
+  g_object_set_qdata (G_OBJECT (display), quark_last_scroll_pointer_window,
+                      pointer_window);
+  g_object_weak_ref (G_OBJECT (pointer_window),
+                     last_scroll_event_weak_ref_notify, display);
+
+  g_object_set_qdata (G_OBJECT (display), quark_last_scroll_event_window,
+                      event_window);
+  g_object_weak_ref (G_OBJECT (event_window),
+                     last_scroll_event_weak_ref_notify, display);
+}
+#endif /* GDK_WINDOWING_QUARTZ */
+
 static gboolean
 proxy_button_event (GdkEvent *source_event,
 		    gulong serial)
@@ -10787,12 +10839,7 @@ proxy_button_event (GdkEvent *source_event,
     {
       if (source_event->scroll.phase == GDK_EVENT_SCROLL_PHASE_START)
         {
-          g_object_set_qdata (G_OBJECT (display),
-                              quark_last_scroll_pointer_window,
-                              pointer_window);
-          g_object_set_qdata (G_OBJECT (display),
-                              quark_last_scroll_event_window,
-                              event_win);
+          set_last_scroll_event_windows (display, pointer_window, event_win);
         }
       else
         {
-- 
1.7.5.4

